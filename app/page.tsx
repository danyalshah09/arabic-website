"use client"

import { useState } from "react"
import Image from "next/image"
import { Card, CardContent } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Facebook, Instagram, Twitter } from "lucide-react"

interface Translations {
  [key: string]: {
    ar: string
    en: string
  }
}

const translations: Translations = {
  // Navigation
  home: { ar: "الرئيسية", en: "Home" },
  aboutFamily: { ar: "عن العائلة", en: "About Family" },
  familyNews: { ar: "أخبار العائلة", en: "Family News" },
  library: { ar: "المكتبة", en: "Library" },
  familyMap: { ar: "خريطة العائلة", en: "Family Map" },
  contactUs: { ar: "تواصل معنا", en: "Contact Us" },

  // Hero Section
  aboutFamilyTitle: { ar: "عن العائلة", en: "About Family" },
  breadcrumb: { ar: "الرئيسية | عن العائلة", en: "Home | About Family" },

  // Main Content
  familyName: { ar: "اسم العائلة", en: "Family Name" },
  familyTreeTitle: { ar: "شجرة العائلة والنسب", en: "Family Tree and Lineage" },

  // Dummy Content
  dummyText1: {
    ar: "هذا النص هو مثال لنص يمكن أن يستبدل في نفس المساحة، لقد تم توليد هذا النص من مولد النص العربى، حيث يمكنك أن تولد مثل هذا النص أو العديد من النصوص الأخرى إضافة إلى زيادة عدد الحروف التى يولدها التطبيق.",
    en: "This text is an example of text that can be replaced in the same space. This text has been generated from the Arabic text generator, where you can generate such text or many other texts in addition to increasing the number of characters generated by the application.",
  },
  dummyText2: {
    ar: "إذا كنت تحتاج إلى عدد أكبر من الفقرات يتيح لك مولد النص العربى زيادة عدد الفقرات كما تريد، النص لن يبدو مقسماً ولا يحوي أخطاء لغوية، مولد النص العربى مفيد لمصممي المواقع على وجه الخصوص، حيث يحتاج العميل في كثير من الأحيان أن يطلع على صورة حقيقية لتصميم الموقع.",
    en: "If you need a larger number of paragraphs, the Arabic text generator allows you to increase the number of paragraphs as you want. The text will not appear divided and does not contain linguistic errors. The Arabic text generator is useful for website designers in particular, as the client often needs to see a real image of the website design.",
  },

  // Card Content
  researchInstitute: { ar: "مؤسسة الأبحاث والدراسات", en: "Research & Studies Institute" },
  cardDescription: {
    ar: "هذا النص هو مثال لنص يمكن أن يستبدل في نفس المساحة",
    en: "This text is an example that can be replaced in the same space",
  },
  since2020: { ar: "منذ عام ٢٠٢٠", en: "Since 2020" },

  // Family Tree
  nobleLineage: { ar: "شجرة النسب الشريف", en: "Noble Family Tree" },
  familyTreeDescription: {
    ar: "شجرة النسب الشريف - عائلة كريمة لها تاريخ عريق",
    en: "Noble Family Tree - A noble family with a rich history",
  },

  // Footer
  contactUsFooter: { ar: "تواصل معنا", en: "Contact Us" },
  contactDescription: {
    ar: "يمكن التواصل مع إدارة الموقع عبر وسائل التواصل الاجتماعي",
    en: "You can contact the site management through social media",
  },
  treeAndDiagram: { ar: "الشجرة ومخططها", en: "Tree & Diagram" },
  privacyPolicy: { ar: "سياسة الخصوصية", en: "Privacy Policy" },
  services: { ar: "الخدمات", en: "Services" },
  quickLinks: { ar: "روابط سريعة", en: "Quick Links" },
  familyTreeComplete: { ar: "شجرة العائلة كاملة بما يخت", en: "Complete Family Tree" },
  footerDescription: {
    ar: "هذا النص هو مثال لنص يمكن أن يستبدل في نفس المساحة، لقد تم توليد هذا النص من مولد النص العربى",
    en: "This text is an example that can be replaced in the same space, generated from the Arabic text generator",
  },
  copyright: {
    ar: "جميع الحقوق محفوظة لموقع شجرة العائلة ٢٠٢٤",
    en: "All rights reserved to Family Tree Website 2024",
  },
  familyTreeNote: {
    ar: "ملحوظة: اضغط لتنزيل الشجرة بجودة عالية",
    en: "Note: Click to download high-quality tree",
  },
}

export default function Component() {
  const [language, setLanguage] = useState<"ar" | "en">("ar")

  const t = (key: string) => translations[key]?.[language] || key

  const toggleLanguage = () => {
    setLanguage((prev) => (prev === "ar" ? "en" : "ar"))
  }

  return (
    <div className="min-h-screen bg-white" dir={language === "ar" ? "rtl" : "ltr"}>
      {/* Header */}
      <header className="bg-[#3A6351] bg-opacity-70 text-white backdrop-blur-sm">
        <div className="container mx-auto px-4 py-3">
          <nav className="flex items-center justify-between">
            {/* Left side - Empty for now */}
            <div className="flex items-center"></div>

            {/* Center - Navigation with Tree Icon */}
            <div className="flex items-center justify-center flex-1">
              <div className="flex items-center space-x-8 space-x-reverse">
                {/* Right side navigation items */}
                <Button
                  variant="ghost"
                  className="text-gray-300 hover:text-white hover:underline text-sm font-medium hover:bg-transparent"
                >
                  {t("home")}
                </Button>
                <Button
                  variant="ghost"
                  className="text-gray-300 hover:text-white hover:underline text-sm font-medium hover:bg-transparent"
                >
                  {t("aboutFamily")}
                </Button>
                <Button
                  variant="ghost"
                  className="text-gray-300 hover:text-white hover:underline text-sm font-medium hover:bg-transparent"
                >
                  {t("familyNews")}
                </Button>

                {/* Center Tree Icon */}
                <div className="mx-6">
                  <div className="w-12 h-12 flex items-center justify-center">
                    <svg width="48" height="48" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg">
                      {/* Tree Crown - Multiple layers for realistic look */}
                      <circle cx="24" cy="16" r="9" fill="#22c55e" opacity="0.9" />
                      <circle cx="18" cy="19" r="7" fill="#16a34a" opacity="0.8" />
                      <circle cx="30" cy="19" r="7" fill="#16a34a" opacity="0.8" />
                      <circle cx="24" cy="23" r="6" fill="#15803d" opacity="0.9" />
                      <circle cx="20" cy="20" r="4" fill="#4ade80" opacity="0.7" />
                      <circle cx="28" cy="20" r="4" fill="#4ade80" opacity="0.7" />

                      {/* Tree Trunk */}
                      <rect x="22" y="28" width="4" height="10" fill="#92400e" />
                      <rect x="21" y="28" width="6" height="2" fill="#a3520e" />

                      {/* Tree Base/Roots */}
                      <ellipse cx="24" cy="38" rx="8" ry="3" fill="#65a30d" opacity="0.6" />
                      <ellipse cx="24" cy="37" rx="6" ry="2" fill="#84cc16" opacity="0.8" />
                    </svg>
                  </div>
                </div>

                {/* Left side navigation items */}
                <Button
                  variant="ghost"
                  className="text-gray-300 hover:text-white hover:underline text-sm font-medium hover:bg-transparent"
                >
                  {t("library")}
                </Button>
                <Button
                  variant="ghost"
                  className="text-gray-300 hover:text-white hover:underline text-sm font-medium hover:bg-transparent"
                >
                  {t("familyMap")}
                </Button>
                <Button
                  variant="ghost"
                  className="text-gray-300 hover:text-white hover:underline text-sm font-medium hover:bg-transparent"
                >
                  {t("contactUs")}
                </Button>
              </div>
            </div>

            {/* Right side - Language Toggle */}
            <div className="flex items-center">
              <Button
                variant="outline"
                size="sm"
                className="text-white border-white/50 hover:bg-white hover:text-[#3A6351] bg-white/10 backdrop-blur-sm px-3 py-1 text-sm"
                onClick={toggleLanguage}
              >
                <svg className="w-3 h-3 mr-1" viewBox="0 0 24 24" fill="currentColor">
                  <path d="M12.87 15.07l-2.54-2.51.03-.03c1.74-1.94 2.98-4.17 3.71-6.53H17V4h-7V2H8v2H1v1.99h11.17C11.5 7.92 10.44 9.75 9 11.35 8.07 10.32 7.3 9.19 6.69 8h-2c.73 1.63 1.73 3.17 2.98 4.56l-5.09 5.02L4 19l5-5 3.11 3.11.76-2.04zM18.5 10h-2L12 22h2l1.12-3h4.75L21 22h2l-4.5-12zm-2.62 7l1.62-4.33L19.12 17h-3.24z" />
                </svg>
                {language === "ar" ? "EN" : "AR"}
              </Button>
            </div>
          </nav>
        </div>
      </header>

      {/* Hero Section */}
      <section
        className="relative h-64 bg-cover bg-center"
        style={{ backgroundImage: "url('/placeholder.svg?height=400&width=1200&text=Family+Heritage+Background')" }}
      >
        <div className="absolute inset-0 bg-black bg-opacity-50"></div>
        <div className="relative container mx-auto px-4 h-full flex flex-col justify-center items-center text-white text-center">
          <h1 className="text-4xl font-bold mb-2">{t("aboutFamilyTitle")}</h1>
          <p className="text-lg">{t("breadcrumb")}</p>
        </div>
      </section>

      {/* Main Content */}
      <section className="py-16 bg-gray-50">
        <div className="container mx-auto px-4">
          <div className="grid lg:grid-cols-2 gap-12 items-start">

              {/* Family Name Content */}
              <div className={`space-y-6 ${language === "en" ? "lg:order-1" : ""}`}>
              <h2 className="text-3xl font-bold text-[#3A6351] mb-6">{t("familyName")}</h2>
              <div className="space-y-4 text-gray-700 leading-relaxed">
                <p>{t("dummyText1")}</p>
                <p>{t("dummyText2")}</p>
              </div>
            </div>


            {/* Family Card */}
            <div className={`relative ${language === "en" ? "lg:order-2" : ""}`}>
              <Card className=" shadow-lg relative">
                {/* Top Left Circle Icon */}
                <div className="absolute -top-2 -left-2 z-10">
                  <div className="w-10 h-10 bg-stone-400 rounded-full flex items-center justify-center">
                    <svg width="20" height="20" viewBox="0 0 24 24" fill="white">
                      <path d="M12 2L13.09 8.26L20 9L13.09 9.74L12 16L10.91 9.74L4 9L10.91 8.26L12 2Z" />
                    </svg>
                  </div>
                </div>
                <div className="absolute top-[25%] right-[-4.5rem] transform -translate-y-1/2 z-10">
  <div className="bg-gray-500 bg-opacity-90 text-white px-4 py-4 rounded-full flex items-center space-x-2 text-sm shadow-lg">
    <div className="w-6 h-6 bg-green-600 rounded-full flex items-center justify-center">
      <svg width="16" height="16" viewBox="0 0 24 24" fill="white">
        <circle cx="12" cy="12" r="3" />
        <path d="M12 1v6m0 10v6m11-7h-6m-10 0H1m15.5-6.5l-4.24 4.24M7.76 16.24L3.52 20.48m12.96 0l-4.24-4.24M7.76 7.76L3.52 3.52" />
      </svg>
    </div>
    <span className="text-xs">{t("researchInstitute")}</span>
  </div>
</div>




                <CardContent className="p-0">
                  <div className="relative">
                    {/* Main Image */}
                    <Image
                      src="/placeholder.svg?height=350&width=450&text=Traditional+Family+Gathering"
                      alt={language === "ar" ? "صورة العائلة" : "Family Photo"}
                      width={450}
                      height={350}
                      className="w-full h-80 object-cover"
                    />

<div className="absolute bottom-0 left-0 right-0 bg-stone-400/20 backdrop-blur-md rounded-full m-4 p-4 border border-stone-400/30">
  <div className="flex flex-row">
  <div className="w-8 h-8 bg-stone-600 rounded flex items-center justify-center ml-3">
      <svg width="16" height="16" viewBox="0 0 24 24" fill="white">
        <path d="M12 2L13.09 8.26L20 9L13.09 9.74L12 16L10.91 9.74L4 9L10.91 8.26L12 2Z" />
      </svg>
    </div>
    <div className="text-white">
      <p className="text-sm mb-1">
        {language === "ar"
          ? "هذا هو تجمع الخطابة... حيث تجتمع الجذور وتنمو الصحة"
          : "This is the gathering of heritage... where roots meet and health grows"}
      </p>
      <p className="text-xs opacity-80">
        {language === "ar" ? "منذ عقد من الزمن" : "Since a decade ago"}
      </p>
    </div>

  </div>
</div>


                  </div>
                </CardContent>

                {/* Decorative Border Effect */}
                <div className="absolute inset-0 rounded-lg border-4 border-[#3A6351] border-opacity-20 pointer-events-none"></div>
              </Card>
            </div>

          </div>
        </div>
      </section>


      {/* Family Tree Section */}
      <section className="py-16 bg-green">

       <div className="container mx-auto border-black px-4">
       <div className="badge1 rounded-full bg-red-400 w-[8%] p-2 relative right-10 top-32">bg top right</div>
          <div className="badge1 rounded-full bg-red-600 w-[10%] p-2 relative right-60 top-105">bg bottom left</div>



          <div className="grid lg:grid-cols-2 gap-12 items-center">
          <div className="flex flex-row relative mt-10">
  <div className="bg-blue-500 rounded-[50px] w-[200px] h-[40vh] text-center z-20 relative top-15 -left-10">
    rect1
  </div>
  <div className="bg-blue-500 rounded-[50px] w-[300px] h-[40vh] text-center z-10 -ml-20">
    rect2
  </div>
</div>



             {/* Family Tree Content */}
             <div className="space-y-6">
              <h2 className="text-3xl font-bold text-[#3A6351] mb-6">{t("familyTreeTitle")}</h2>
              <div className="space-y-4 text-gray-700 leading-relaxed">
                <p>{t("dummyText1")}</p>
                <p>{t("dummyText2")}</p>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Footer */}
      <footer className="bg-[#3A6351] text-white py-12">
        <div className="container mx-auto px-4">
          <div className="grid md:grid-cols-4 gap-8">
            {/* Logo and Description */}
            <div>
              <div className={`flex items-center mb-4 ${language === "ar" ? "" : "flex-row-reverse"}`}>
                <div className={`w-8 h-8 flex items-center justify-center ${language === "ar" ? "ml-3" : "mr-3"}`}>
                  <svg
                    width="32"
                    height="32"
                    viewBox="0 0 40 40"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                    className="text-green-400"
                  >
                    <circle cx="20" cy="15" r="8" fill="#4ade80" />
                    <circle cx="15" cy="18" r="6" fill="#22c55e" />
                    <circle cx="25" cy="18" r="6" fill="#22c55e" />
                    <circle cx="20" cy="22" r="5" fill="#16a34a" />
                    <rect x="18" y="25" width="4" height="8" fill="#92400e" />
                    <ellipse cx="20" cy="33" rx="6" ry="2" fill="#65a30d" />
                  </svg>
                </div>
                <div>
                  <h3 className="text-lg font-bold">{t("familyTreeComplete")}</h3>
                  <p className="text-sm">{t("footerDescription")}</p>
                </div>
              </div>
            </div>


            {/* Tree and Diagram */}
            <div>
              <h3 className="text-lg font-bold mb-4">{t("treeAndDiagram")}</h3>
              <ul className="space-y-2 text-sm">
                <li>
                  <a href="#" className="hover:text-green-200">
                    {t("privacyPolicy")}
                  </a>
                </li>
                <li>
                  <a href="#" className="hover:text-green-200">
                    {t("familyNews")}
                  </a>
                </li>
                <li>
                  <a href="#" className="hover:text-green-200">
                    {t("services")}
                  </a>
                </li>
              </ul>
            </div>

            {/* Quick Links */}
            <div>
              <h3 className="text-lg font-bold mb-4">{t("quickLinks")}</h3>
              <ul className="space-y-2 text-sm">
                <li>
                  <a href="#" className="hover:text-green-200">
                    {t("home")}
                  </a>
                </li>
                <li>
                  <a href="#" className="hover:text-green-200">
                    {t("aboutFamily")}
                  </a>
                </li>
                <li>
                  <a href="#" className="hover:text-green-200">
                    {t("library")}
                  </a>
                </li>
                <li>
                  <a href="#" className="hover:text-green-200">
                    {t("services")}
                  </a>
                </li>
              </ul>
            </div>
{/* Contact Info */}
<div>
              <h3 className="text-lg font-bold mb-4">{t("contactUsFooter")}</h3>
              <p className="text-sm mb-4">{t("contactDescription")}</p>
              <div
  className={`flex justify-center items-center gap-x-3 mt-4 ${
    language === "ar" ? "flex-row-reverse" : ""
  }`}
>
  <Button
    size="icon"
    variant="outline"
    className="w-10 h-10 rounded-full flex items-center justify-center text-white border-white hover:bg-white hover:text-[#3A6351] bg-transparent"
  >
    <Facebook className="h-4 w-4" />
  </Button>
  <Button
    size="icon"
    variant="outline"
    className="w-10 h-10 rounded-full flex items-center justify-center text-white border-white hover:bg-white hover:text-[#3A6351] bg-transparent"
  >
    <Instagram className="h-4 w-4" />
  </Button>
  <Button
    size="icon"
    variant="outline"
    className="w-10 h-10 rounded-full flex items-center justify-center text-white border-white hover:bg-white hover:text-[#3A6351] bg-transparent"
  >
    <Twitter className="h-4 w-4" />
  </Button>
</div>


            </div>
          </div>

          <div className="border-t border-[#2d4d3e] mt-8 pt-8 text-center">
            <p className="text-sm">{t("copyright")}</p>
          </div>
        </div>
      </footer>
    </div>
  )
}
